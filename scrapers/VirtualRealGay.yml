name: VirtualRealGay

sceneByFragment:
  action: scrapeXPath
  # url format: https://virtualrealgay.com/vr-gay-porn-video/{title}
  # title is part of the official filename for more recent scenes
  # however, title will have spaces replaced with '_' in the file name
  queryURL: https://virtualrealgay.com/vr-gay-porn-video/{filename}/
  queryURLReplace:
    # filename format:
    #   - older scenes
    #       VirtualRealPorn.com_-_{title}_-_{misc}.{ext}
    #         misc: could be vrtype, instructios for their player etc. Not relevant.
    #   - new scenes:
    #       VirtualRealPorn_{title}_{res}_{vrtype}.{ext}
    #         res: oculus|\d+k
    #         vrtype: stuff we do not care about but could contain '_'
    filename:
      - regex: (?i)^(?:VirtualRealGay_(?P<title>.+)_(?:oculus|\dk)_.+)|(?:VirtualRealGay.com_-_(?P<title>.+?)_-_.+)$
        with: $title
      # title has spaces replaced with '_' in the filename
      # but we need '-' for the url
      - regex: _
        with: "-"
  scraper: sceneScraper

xPathScrapers:
  sceneScraper:
    scene:
      Title: &titleDef
        selector: //div[@class="header_video"]//h1
        postProcess:
          - replace:
              - regex: VR [\s\w]+? video$
                with: ""
      Date: &dateAttr
        selector: //div[@class="featured_data"]/text()
        concat: " "
        postProcess:
          - replace:
              - regex: '.* (\w+ \d+, \d{4}).*'
                with: $1
          - parseDate: Jan 2, 2006
      Details: &detailsSel
        selector: //div[@class="description_container"]/p
        concat: "\n\n"
      Tags:
        Name:
          selector: //div[@class="metaHolder"]//a/span/text()|//script[@type="application/ld+json"][contains(text(),"genre")]/text()
          postProcess:
            - javascript: |
                if (value && value.length && value.startsWith('{')) {
                  // parse JSON
                  return JSON.parse(value)
                    .genre
                    .split(', ')
                    // can only return one tag, find or default
                    .find(v => v.toLowerCase() === 'virtual reality')
                        ?? 'Virtual Reality'
                } else {
                  // return (text of tag) as-is
                  return value
                }
      Performers:
        Name: //div[@class="performers_section"]//div[@class="model-box"]/a/img/@alt
      Studio:
        Name: &studioName
          selector: //meta[@property="og:site_name"]/@content
          postProcess:
            - replace:
                - regex: \.com
                  with: ""
            - map:
                VirtualRealAmateurPorn: "VirtualRealAmateur"
      Image: &imageSel //meta[@property="og:image"]/@content
      URL: //link[@rel="canonical"]/@href
      Code: 
        selector: //link[@rel="shortlink"]/@href
        postProcess:
          - replace:
            - regex: ^https://.*/\?p=
              with:
      # Movies:
      #   Name:
      #     selector: //meta[@property="og:site_name"]/@content|//h1[@class="titleVideo"]
      #     concat: " - "
      #   Date: *dateAttr
      #   Synopsis: *detailsSel
      #   URL: //meta[@property="og:url"]/@content
# Last Updated April 30, 2025